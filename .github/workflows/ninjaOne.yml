name: Java Maven CI

# Trigger the workflow on push and pull_request events
on:
  push:
    branches:
      - main  # Trigger when code is pushed to the main branch
  pull_request:
    branches:
      - main  # Trigger when a PR is opened targeting the main branch

jobs:
  build:
    # The type of virtual machine to use
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK (Java Development Kit)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'  # You can use 'openjdk' or 'adoptopenjdk'

      # 3. Cache Maven dependencies (to speed up subsequent builds)
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository  # Maven's default local repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Cache key based on the pom.xml file
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Run the Maven build (compile, test, package)
      - name: Build with Maven
        run: mvn clean install --no-transfer-progress

      # 5. Run tests with Maven (optional but recommended)
      - name: Run tests with Maven
        run: mvn test --no-transfer-progress
